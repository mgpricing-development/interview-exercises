openapi: 3.0.0
info:
  version: 1.0.0
  title: To Do API
  license:
    name: MIT
servers:
  - url: "http://localhost:3001/"
  - url: "https://api.dev.cuvama.com/"
paths:
  /config:
    get:
      summary: Get config
      operationId: getConfig
      tags:
        - tasks
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
      responses:
        "200":
          description: List of Tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /tasks:
    get:
      summary: Get the list of tasks
      operationId: getTasks
      tags:
        - tasks
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
      responses:
        "200":
          description: List of Tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tasks"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new task
      operationId: createTask
      tags:
        - tasks
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTask"
      responses:
        "200":
          description: Created task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /tasks/{taskId}:
    delete:
      summary: Delete a task
      operationId: deleteTask
      tags:
        - tasks
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
        - name: taskId
          in: path
          required: true
          description: The version of the master data to retrieve
          schema:
            type: string
      responses:
        "204":
          description: Deleted successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /guests:
    post:
      summary: Register a new guest
      operationId: registerGuest
      tags:
        - guests
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
        - $ref: '#/components/parameters/X-Guest-Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterGuest"
      responses:
        "200":
          description: Created task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /guests/me:
    get:
      summary: Get my guest status
      operationId: getGuest
      tags:
        - guests
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
        - $ref: '#/components/parameters/X-Guest-Id'
      responses:
        "200":
          description: Created task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Config:
      type: object
      additionalProperties: false
      properties:
        basicAuthentication:
          type: string
    CreateTask:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
    Error:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
    Guest:
      type: object
      additionalProperties: false
      required:
        - guestId
        - email
      properties:
        guestId:
          type: string
        email:
          type: string
          example: foo@bar.com
    RegisterGuest:
      type: object
      additionalProperties: false
      required:
        - email
        - reportId
      properties:
        email:
          type: string
          example: foo@bar.com
        reportId:
          type: string
    Task:
      type: object
      additionalProperties: false
      required:
        - _id
      properties:
        name:
          type: string
        _id:
          type: string
    Tasks:
      type: array
      items:
        $ref: "#/components/schemas/Task"
  parameters:
    X-Guest-Id:
      name: X-Guest-Id
      in: header
      required: true
      description: A UUID to uniquely identify an anonymous visitor to the web reports
      schema:
        type: string
        example: guest-d49c1457-183d-4d8a-b193-96f968caa021
    X-Request-Id:
      name: X-Request-Id
      in: header
      required: true
      description: A UUID to uniquely identify the web request for tracing and debugging purposes
      schema:
        type: string
        format: uuid
        example: d49c1457-183d-4d8a-b193-96f968caa021
